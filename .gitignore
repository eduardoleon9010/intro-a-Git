# Archivos compilados / optimizados / DLL
__pycache__/
*.py[cod]
*$py.class

# Extensiones C
*.so

# Distribución / empaquetado
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Normalmente estos archivos son escritos por un script Python a partir de una plantilla
# antes de que PyInstaller construya el exe, para inyectar fecha u otra información en él.
*.manifest
*.spec

# Registros del instalador
pip-log.txt
pip-delete-this-directory.txt

# Informes de pruebas unitarias / cobertura
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Traducciones
*.mo
*.pot

# Archivos de Django:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Archivos de Flask:
instance/
.webassets-cache

# Archivos de Scrapy:
.scrapy

# Documentación de Sphinx
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
# Según pypa/pipenv#598, se recomienda incluir Pipfile.lock en el control de versiones.
# Sin embargo, en caso de colaboración, si se tienen dependencias específicas de plataforma
# o dependencias que no tienen soporte multiplataforma, pipenv puede instalar dependencias
# que no funcionen, o no instalar todas las dependencias necesarias.
#Pipfile.lock

# PEP 582; usado por por ej. github.com/David-OConnor/pyflow
__pypackages__/

# Archivos de Celery
celerybeat-schedule
celerybeat.pid

# Archivos analizados por SageMath
*.sage.py

# Entornos
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Configuraciones del proyecto Spyder
.spyderproject
.spyproject

# Configuraciones del proyecto Rope
.ropeproject

# Documentación de mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Comprobador de tipos Pyre
.pyre/
